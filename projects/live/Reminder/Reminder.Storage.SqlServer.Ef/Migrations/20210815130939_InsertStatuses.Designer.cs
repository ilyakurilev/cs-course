// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reminder.Storage.SqlServer.Ef;

namespace Reminder.Storage.SqlServer.Ef.Migrations
{
    [DbContext(typeof(ReminderStorageContext))]
    [Migration("20210815130939_InsertStatuses")]
    partial class InsertStatuses
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reminder.Storage.SqlServer.Ef.Entities.ReminderContactEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("ChatId")
                        .IsUnique()
                        .HasName("UQ_ReminderContacts_ChatId");

                    b.ToTable("ReminderContacts");
                });

            modelBuilder.Entity("Reminder.Storage.SqlServer.Ef.Entities.ReminderItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(true);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("StatusId");

                    b.ToTable("ReminderItems");
                });

            modelBuilder.Entity("Reminder.Storage.SqlServer.Ef.Entities.ReminderStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("Status")
                        .IsUnique()
                        .HasName("UQ_ReminderStatuses_Status");

                    b.ToTable("ReminderStatuses");
                });

            modelBuilder.Entity("Reminder.Storage.SqlServer.Ef.Entities.ReminderItemEntity", b =>
                {
                    b.HasOne("Reminder.Storage.SqlServer.Ef.Entities.ReminderContactEntity", "Contact")
                        .WithMany("ReminderItems")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reminder.Storage.SqlServer.Ef.Entities.ReminderStatusEntity", "Status")
                        .WithMany("ReminderItems")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
